name: Go

on:
  push:
    branches: [ main ]
    tags:
      - v*.*

  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install build time dependencies
      run: |
        # install some build time dependencies
        sudo apt-get update -q
        sudo apt-get -qqy install libwebkit2gtk-4.0-dev  build-essential libgtk-3-dev

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: |
        touch service/lyrix-windows_exporter.exe
        cd cmd/cli
        go build -ldflags="-X 'github.com/lyrix-music/cli/meta.BuildTime=$(date +%s)' -X 'github.com/lyrix-music/cli/meta.BuildVersion=$(git describe --always)' -X 'github.com/lyrix-music/cli/meta.DiscordApplicationId=${{ secrets.DiscordApplicationId }}' -s -w" .
        mv cli lyrix-cli_linux64
        cd ../..

    - uses: actions/upload-artifact@v2
      with:
        name: lyrix-cli-linux
        path: cmd/cli/lyrix-cli_linux64


    - name: Build Desktop AppImage
      run: |

        cd cmd/desktop
        # copy the styles
        mkdir -p static/css
        wget https://raw.githubusercontent.com/lyrix-music/styles/main/css/lyrix.css -O static/css/lyrix.css

        go build -ldflags "-s -w" .
        cp AppDir squashfs-root -r
        cp ./desktop squashfs-root/lyrix-desktop
        cp templates static squashfs-root/. -r
        wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool*.AppImage
        ./appimagetool*.AppImage squashfs-root
        cd ../..

    - uses: actions/upload-artifact@v2
      with:
        name: lyrix-appimage
        path: cmd/desktop/Lyrix-x86_64.AppImage



  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Python Exporter
        run: |
          cd service/win_exporter
          pip3 install poetry
          poetry install
          poetry run pyinstaller exporter.py --onefile
          mv dist/exporter.exe ../../service/lyrix-windows_exporter.exe

      - name: Build
        run: |
          cd cmd/cli
          go build -ldflags="-X 'github.com/lyrix-music/cli/meta.BuildTime=$(date +%s)' -X 'github.com/lyrix-music/cli/meta.BuildVersion=$(git describe --always)' -X 'github.com/lyrix-music/cli/meta.DiscordApplicationId=${{ secrets.DiscordApplicationId }}' -s -w" .
          mv cli.exe lyrix-cli_win64.exe
          cd ../..

      - uses: actions/upload-artifact@v2
        with:
          name: lyrix-cli-windows
          path: cmd/cli/lyrix-cli_win64.exe

  release:
    needs: [build, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
          chmod +x pyuploadtool-x86_64.AppImage
          ls -alHR
          ./pyuploadtool-x86_64.AppImage cmd/cli/cli cmd/desktop/Lyrix*.AppImage cmd/cli
